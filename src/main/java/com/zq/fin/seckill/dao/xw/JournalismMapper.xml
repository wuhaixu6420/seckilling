<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zq.fin.seckill.dao.xw.JournalismMapper">
    <resultMap id="BaseResultMap" type="com.zq.fin.seckill.entity.xw.Journalism">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="journalism_content" property="journalismContent" jdbcType="VARCHAR" />
        <result column="classification" property="classification" jdbcType="VARCHAR" />
        <result column="create_id" property="createId" jdbcType="BIGINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_id" property="updateId" jdbcType="BIGINT" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, title, journalism_content, classification, create_id, create_time, update_id, update_time 
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zq.fin.seckill.entity.xw.JournalismExample">
        select 
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from journalism 
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from journalism
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from journalism
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.zq.fin.seckill.entity.xw.JournalismExample">
        delete from journalism
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.zq.fin.seckill.entity.xw.Journalism">
        insert into journalism (id, title, journalism_content, classification, create_id, create_time)
        values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{journalismContent,jdbcType=VARCHAR}, 
        #{classification,jdbcType=VARCHAR}, #{createId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.zq.fin.seckill.entity.xw.Journalism">
        insert into journalism
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="journalismContent != null">
                journalism_content,
            </if>
            <if test="classification != null">
                classification,
            </if>
            <if test="createId != null">
                create_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="journalismContent != null">
                #{journalismContent,jdbcType=VARCHAR},
            </if>
            <if test="classification != null">
                #{classification,jdbcType=VARCHAR},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zq.fin.seckill.entity.xw.JournalismExample" resultType="java.lang.Integer">
        select count(*) from journalism
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update journalism
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="record.journalismContent != null">
                journalism_content = #{journalismContent,jdbcType=VARCHAR},
            </if>
            <if test="record.classification != null">
                classification = #{classification,jdbcType=VARCHAR},
            </if>
            <if test="record.updateId != null">
                update_id = #{updateId,jdbcType=BIGINT},
            </if>
            <if test="record.updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update journalism
        set id = #{record.id,jdbcType=BIGINT},
        title = #{title,jdbcType=VARCHAR},
        journalism_content = #{journalismContent,jdbcType=VARCHAR},
        classification = #{classification,jdbcType=VARCHAR},
        update_id = #{updateId,jdbcType=BIGINT},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zq.fin.seckill.entity.xw.Journalism">
        update journalism
        <set>
            <if test="record.title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="record.journalismContent != null">
                journalism_content = #{journalismContent,jdbcType=VARCHAR},
            </if>
            <if test="record.classification != null">
                classification = #{classification,jdbcType=VARCHAR},
            </if>
            <if test="record.updateId != null">
                update_id = #{updateId,jdbcType=BIGINT},
            </if>
            <if test="record.updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    
    <!-- 根据时间，查询最新的新闻 -->
    <select id="selectNewestByExample" resultMap="BaseResultMap" parameterType="com.zq.fin.seckill.entity.xw.JournalismExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from journalism
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
</mapper>